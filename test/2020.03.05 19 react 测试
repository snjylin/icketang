1 在创建高阶组件的方法中，为何不能直接修改原来的组件？  
    直接修改原来的组件会影响之前使用的组件。  
    所以在高阶方法中，我们定义新组件，在新组件中渲染原来的组件，通过对新组件拓展实现对原组件功能的拓展。  
  
2 高阶组件与混合继承的区别？  
    混合继承：是对原组件的继承，可以通过原型链访问并修改原组件的数据，会覆盖继承的方法。  
    高阶组件：是对原组件的包装，只能使用原组件，不能修改其数据，定义的同名方法可以共存。  
  
3 如何为函数组件设置ref属性  
    首先用forwardRef取消对组件的指向，在通过其它属性向函数组件传递ref属性。  
  
4 ref对象如何在高阶组件中转发给原组件。  
    为高阶组件传递ref属性  
    在高阶组件中，通过forwardRef方法取消ref的指向，在将ref对象转发给内部的组件。  
  
5 如何让函数组件使用state数据？  
    通过useState方法使用  
        let [num, setNum] = useState(0);  
  
6 如何为函数组件拓定义生命周期方法  
    通过useEffect方法拓展生命周期方法  
  
7 renderToString，renderToStaticMarkup，renderToNodeStream，renderToStaticNodeStream四个方法的区别是？都有哪些应用？  
    renderToString：渲染并输出字符串，常用  
    renderToStaticMarkup：渲染并输出字符串的同时会删除额外的属性，通常用来渲染静态页面  
    renderToNodeStream：渲染并输出字符串，服务器端渲染优化的时候常用。  
    renderToStaticNodeStream：渲染并输出字符串的同时会删除额外的属性，在服务器端考虑渲染优化的时候，通常用来渲染静态页面  
  
8 为什么要前后端同步渲染？  
    前端渲染存在的问题：白屏时间长，不利于SEO优化等  
    后端渲染存在的问题：无法绑定交互  
    为了解决以上问题，要前后端同步渲染。  
  
9 在webpack配置中，如何将ES Module规范中的默认接口暴露在CommonJS规范中。  
    output.libraryExport: default  
  
10 render方法与hydrate方法的区别是什么  
    render会将应用程序直接渲染到页面中  
    hydrate会在首次渲染的时候判断，如果服务器端渲染过，直接绑定交互。  
